{"version":3,"sources":["Component/Searchbar/Searchbar.js","Component/ImageGalleryItem/ImageGalleryItem.js","Component/ImageGallery/ImageGallery.js","Component/Button/Button.js","Component/Loader/Loader.js","Component/Modal/Modal.js","api.js","App.js","index.js"],"names":["Searchbar","state","value","handleChange","e","setState","currentTarget","handleSubmit","preventDefault","props","changeQuery","this","className","onSubmit","type","autocomplete","autofocus","placeholder","onChange","Component","defaultProps","ImageGalleryItem","url","alt","src","ImageGallery","images","openModal","map","id","webformatURL","tags","largeImageURL","onClick","Button","Spiner","color","height","width","modalRoot","document","querySelector","Modal","handleKeyDown","code","console","log","onClose","handleBackdropClick","event","target","window","addEventListener","removeEventListener","createPortal","children","fetchData","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","App","isLoading","showModal","modalImg","modalAlt","error","onChangeQuery","query","fetchImages","options","prevState","windowScroll","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","prevProps","shouldRenderLoadMoreButton","length","style","textAlign","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RAGqBA,E,4MASjBC,MAAQ,CACRC,MAAO,I,EAIPC,aAAe,SAACC,GAChB,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcJ,S,EAGvCK,aAAe,SAACH,GACZA,EAAEI,iBACF,EAAKC,MAAMC,YAAY,EAAKT,MAAMC,OAClC,EAAKG,SAAS,CAAEH,MAAO,M,4CAK3B,WACI,IAAQA,EAAUS,KAAKV,MAAfC,MACR,OACI,wBAAQU,UAAU,YAAlB,SACI,uBAAMC,SAAUF,KAAKJ,aAAcK,UAAU,aAA7C,UACI,wBAAQE,KAAK,SAASF,UAAU,oBAAhC,SACI,sBAAMA,UAAU,0BAAhB,sBAGJ,uBACIA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUP,KAAKR,aACfD,MAAOA,a,GA1CQiB,aAAlBnB,EACVoB,aAAe,CACtBlB,MAAO,ICHX,IAMemB,EANU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,IAAKC,EAAS,EAATA,IAC5B,OACG,qBAAKC,IAAKF,EAAKC,IAAKA,EAAKX,UAAU,4BCa3Ba,EAdQ,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,UAC7B,OACE,oBAAIf,UAAU,eAAd,SACOc,EAAOE,KAAI,YAAgD,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACnC,OACI,oBAAIpB,UAAU,mBAA4BqB,QAAS,WAAON,EAAUK,EAAeD,IAAnF,SACI,cAAC,EAAD,CAAkBT,IAAKQ,EAAcP,IAAMQ,KADTF,SCF3CK,EAJA,SAAC,GAAe,IAAdD,EAAa,EAAbA,QACb,OAAQ,qBAAKrB,UAAU,mBAAf,SAAkC,wBAAQE,KAAK,SAASF,UAAU,SAASqB,QAASA,EAAlD,0B,iBCW/BE,EAXA,WACX,OACK,qBAAKvB,UAAU,oBAAf,SACG,cAAC,IAAD,CACCE,KAAK,UACLsB,MAAM,UACNC,OAAQ,IACTC,MAAO,SCNbC,G,MAAYC,SAASC,cAAc,gBAEpBC,E,4MAWnBC,cAAgB,SAAAvC,GACC,WAAXA,EAAEwC,OACJC,QAAQC,IAAI,kKAEZ,EAAKrC,MAAMsC,Y,EAIfC,oBAAsB,SAAAC,GAIhBA,EAAM3C,gBAAkB2C,EAAMC,QAChC,EAAKzC,MAAMsC,W,uDAvBf,WACEF,QAAQC,IAAI,2BACZK,OAAOC,iBAAiB,UAAWzC,KAAKgC,iB,kCAG1C,WACEE,QAAQC,IAAI,8BACZK,OAAOE,oBAAoB,UAAW1C,KAAKgC,iB,oBAoB3C,WACC,OAAOW,uBACN,qBAAK1C,UAAU,UAAUqB,QAAStB,KAAKqC,oBAAvC,SACE,qBAAKpC,UAAU,QAAf,SAAwBD,KAAKF,MAAM8C,aAErChB,O,GAjC6BpB,a,iBCKnBqC,EAPE,SAAC,GAA0D,IAAD,IAAvDC,mBAAuD,MAAzC,GAAyC,MAArCC,mBAAqC,MAAvB,EAAuB,MAApBC,gBAAoB,MAAT,GAAS,EACxE,OAAOC,IAAMC,IAAN,qCAAwCJ,EAAxC,iBAA4DC,EAA5D,gBAHC,qCAGD,6DAAuIC,IAChJG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,SCiMlBC,E,4MA3LdjE,MAAQ,CACLwD,YAAa,GACbC,YAAa,EACbhC,OAAQ,GACRyC,WAAW,EACXC,WAAW,EACXC,SAAU,GACVC,SAAU,GACVC,MAAO,M,EAsBTC,cAAgB,SAAAC,GACd,EAAKpE,SAAS,CACZoD,YAAagB,EACbf,YAAa,EACbhC,OAAQ,GACR6C,MAAO,Q,EAIVG,YAAc,WACb,MAAqC,EAAKzE,MAAlCyD,EAAR,EAAQA,YACFiB,EAAU,CAAElB,YADlB,EAAqBA,YACUC,eAE/B,EAAKrD,SAAS,CAAE8D,WAAW,IAE3BX,EAAUmB,GAASb,MAAK,SAAApC,GACtB,EAAKrB,UAAS,SAAAuE,GAAS,MAAK,CAC1BlD,OAAO,GAAD,mBAAMkD,EAAUlD,QAAhB,YAA2BA,IACjCgC,YAAakB,EAAUlB,YAAc,MAEvC,EAAKmB,kBACJC,OAAM,SAAAP,GAAK,OAAI,EAAKlE,SAAS,CAAEkE,aAC/BQ,SAAQ,kBAAM,EAAK1E,SAAS,CAAE8D,WAAW,Q,EAI9CU,aAAe,WACb1B,OAAO6B,SAAS,CAClBC,IAAKzC,SAAS0C,gBAAgBC,aAC9BC,SAAU,Y,EAIVC,YAAc,WACZ,EAAKhF,UAAS,kBAAoB,CAChC+D,WADY,EAAGA,e,EAKnBzC,UAAY,SAACL,EAAKC,GAChB,EAAKlB,UAAS,kBAAoB,CAChC+D,WADY,EAAGA,UAEfC,SAAU/C,EACVgD,SAAU/C,O,wDAjDd,SAAmB+D,EAAWV,GACtBA,EAAUnB,cAAgB9C,KAAKV,MAAMwD,aACzC9C,KAAK+D,gB,oBAoDT,WACE,MAAoE/D,KAAKV,MAAjEsE,EAAR,EAAQA,MAAO7C,EAAf,EAAeA,OAAQyC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,UAAWC,EAA7C,EAA6CA,SAAUC,EAAvD,EAAuDA,SACjDiB,EAA6B7D,EAAO8D,OAAS,IAAMrB,EACzD,OAEE,qCACE,cAAC,EAAD,CAAWzD,YAAaC,KAAK6D,gBAE5BD,GAAS,oBAAIkB,MAAO,CAAErD,MAAO,UAAWsD,UAAW,UAA1C,mCAEV,cAAC,EAAD,CAAchE,OAAQA,EAAQC,UAAWhB,KAAKgB,YAE7CwC,GAAc,cAAC,EAAD,IAEdoB,GAA8B,cAAC,EAAD,CAAQtD,QAAStB,KAAK+D,cAEpDN,GACC,cAAC,EAAD,CAAOrB,QAASpC,KAAK0E,YAArB,SACA,qBAAK7D,IAAK6C,EAAU9C,IAAK+C,a,GAjGjBnD,a,MCHlBwE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrD,SAASsD,eAAe,W","file":"static/js/main.48040a33.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n    static defaultProps = {\r\n    value: '',\r\n    };\r\n\r\n    static propTypes = {\r\n        value: PropTypes.string,             \r\n  };\r\n\r\n    state = {\r\n    value: ''\r\n    // value: this.props.name,    \r\n    };\r\n\r\n    handleChange = (e) => {\r\n    this.setState({ value: e.currentTarget.value });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.changeQuery(this.state.value);\r\n        this.setState({ value: '' });\r\n    //  this.props.onSubmit(this.state);\r\n    // this.reset();\r\n    };\r\n    \r\n    render() {\r\n        const { value } = this.state;\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n                    <button type=\"submit\" className=\"SearchForm-button\">\r\n                        <span className=\"SearchForm-button-label\">Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className=\"SearchForm-input\"\r\n                        type=\"text\"\r\n                        autocomplete=\"off\"\r\n                        autofocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                        value={value}\r\n                    />\r\n                </form>\r\n            </header>\r\n            \r\n        );\r\n     };\r\n };\r\n \r\n\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({url, alt}) => {\r\n    return (\r\n       <img src={url} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    );\r\n};\r\n\r\nexport default ImageGalleryItem","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem'\r\n\r\n  const ImageGallery = ({images, openModal}) => {\r\n    return (\r\n      <ul className=\"ImageGallery\">\r\n            {images.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n                return (\r\n                    <li className=\"ImageGalleryItem\" key={id} onClick={() => {openModal(largeImageURL, tags)}}>\r\n                        <ImageGalleryItem url={webformatURL} alt={ tags }/>\r\n                    </li>\r\n             );\r\n         })}\r\n      </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\n\r\nconst Button = ({onClick}) => {\r\n    return (<div className='button-conteiner'><button type='button' className=\"Button\" onClick={onClick}>Load more</button></div>);\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst Spiner = () => {\r\n    return (\r\n         <div className='spinner-conteiner'>\r\n            <Loader\r\n             type=\"Circles\"\r\n             color=\"#00BFFF\"\r\n             height={100}\r\n            width={100} />\r\n        </div>\r\n    )\r\n}\r\nexport default Spiner;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    console.log('Modal componentDidMount');\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Modal componentWillUnmount');\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    // console.log('Кликнули в бекдроп');\r\n    // console.log('currentTarget: ', event.currentTarget);\r\n    // console.log('target: ', event.target);\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n    render() {\r\n     return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n};","import axios from 'axios';\r\n\r\nconst KEY = '21347916-d2cb58bac2dcf6ecd9205e483';\r\n\r\nconst fetchData = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\r\n    return axios.get(`https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=${pageSize}`\r\n).then(response => response.data.hits);\r\n    };\r\n\r\n  \r\n\r\nexport default  fetchData;","import React, { Component } from 'react';\r\nimport './styles.css';\r\nimport SearchBar from './Component/Searchbar';\r\nimport ImageGallery from './Component/ImageGallery';\r\nimport Button from './Component/Button';\r\nimport Spinner from './Component/Loader';\r\n// import Spinner from './Component/Spinner';\r\nimport Modal from './Component/Modal';\r\nimport fetchData from './api'\r\n\r\n\r\nclass App extends Component {\r\n state = {\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    images: [],\r\n    isLoading: false,\r\n    showModal: false,\r\n    modalImg: '',\r\n    modalAlt: '',\r\n    error: null,\r\n  };\r\n\r\n//   componentDidMount() {\r\n//     axios.get('https://pixabay.com/api/?q=cat&page=1&key=21347916-d2cb58bac2dcf6ecd9205e483&image_type=photo&orientation=horizontal&per_page=12'\r\n// ).then(response => {\r\n//       console.log(response.data.hits);\r\n//     })\r\n//     // const todos = localStorage.getItem('todos');\r\n//     // const parsedTodos = JSON.parse(todos);\r\n//     // // console.log(parsedContacts);\r\n//     // if (parsedTodos) {\r\n//     //   this.setState({todos:parsedTodos});      \r\n//     // }    \r\n//   };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n      if (prevState.searchQuery !== this.state.searchQuery) {\r\n      this.fetchImages();\r\n    };\r\n  };\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      images: [],\r\n      error: null,\r\n    });\r\n  };\r\n\r\n   fetchImages = () => {\r\n    const { currentPage, searchQuery } = this.state;\r\n    const options = { searchQuery, currentPage };\r\n\r\n    this.setState({ isLoading: true });\r\n     \r\n    fetchData(options).then(images => {\r\n      this.setState(prevState => ({\r\n        images: [...prevState.images, ...images],\r\n        currentPage: prevState.currentPage + 1,\r\n      }));\r\n      this.windowScroll();\r\n    }).catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  \r\n  windowScroll = () => {\r\n    window.scrollTo({\r\n  top: document.documentElement.scrollHeight,\r\n  behavior: 'smooth',\r\n});\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n  \r\n  openModal = (url, alt) => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n      modalImg: url,\r\n      modalAlt: alt\r\n    }));\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { error, images, isLoading, showModal, modalImg, modalAlt } = this.state;\r\n    const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n    return (\r\n\r\n      <>\r\n        <SearchBar changeQuery={this.onChangeQuery} />\r\n        \r\n        {error && <h1 style={{ color: '#ff0000', textAlign: 'center' }}>Something going wrong</h1>}\r\n        \r\n        <ImageGallery images={images} openModal={this.openModal} />\r\n\r\n        {isLoading &&  <Spinner/>}\r\n        \r\n        {shouldRenderLoadMoreButton && <Button onClick={this.fetchImages} />}\r\n              \r\n        {showModal && \r\n          <Modal onClose={this.toggleModal}>\r\n          <img src={modalImg} alt={modalAlt}/>\r\n          </Modal>}\r\n        \r\n      </>\r\n         \r\n    );\r\n  };\r\n};\r\n \r\n\r\n// class App extends React.Component {\r\n//   static defaultProps = {\r\n//     contacts: contactsUser,\r\n//     filter: ''\r\n//   };\r\n\r\n//   static propTypes = {\r\n//     contacts: PropTypes.array,\r\n//     filter: PropTypes.string,\r\n//   };\r\n  \r\n  \r\n//   state = {\r\n//     contacts: this.props.contacts,\r\n//     filter: this.props.filter,\r\n//   };\r\n\r\n  \r\n//   formAddContact = ({ name, number }) => {\r\n//     console.log(name, number);\r\n    \r\n//     const contact = {\r\n//       id: uuidv4(),\r\n//       name: name,\r\n//       number: number      \r\n//     };\r\n//     const contactNames = this.state.contacts.map(contact => contact.name);\r\n//     this.renderContacts(contactNames, contact.name, contact);\r\n//   };\r\n  \r\n//   renderContacts = (contactsList, contactName, newContact) => {\r\n//     if (contactsList.includes(contactName)) {\r\n//       alert(`${contactName} is already in contacts`)\r\n//     } else {\r\n//       this.setState(({ contacts }) => ({\r\n//         contacts: [...contacts, newContact],\r\n//       }));\r\n//     };   \r\n//   };\r\n\r\n//   changeFilter = (e) => {\r\n//     this.setState({ filter: e.target.value });\r\n//   };\r\n\r\n\r\n//   getFilteredContacts = () => {\r\n//     const normalizedFilter = this.state.filter.toLowerCase();\r\n\r\n//     return this.state.contacts.filter(contact => {\r\n//       return contact.name.toLowerCase().includes(normalizedFilter)\r\n//     })\r\n//    };\r\n \r\n//   deleteContact = (contactId) => {\r\n//     this.setState(prevState => ({\r\n//       contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     //  const visibleContacts = this.getVisibleContacts();\r\n//     return (\r\n//       <Container>\r\n//         <div>\r\n//           <h1>Phonebook</h1>\r\n//           <ContactForm\r\n//             onSubmit={this.formAddContact} />\r\n\r\n//           <h2>Contacts</h2>\r\n//           <Filter\r\n//           value={this.state.filter}\r\n//           onChange={ this.changeFilter }/>\r\n//           <ContactList\r\n//           shownContacts={this.getFilteredContacts}\r\n//           onClick={  this.deleteContact}/>\r\n//         </div>\r\n//       </Container>\r\n      \r\n//     );\r\n//   };\r\n// }\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}